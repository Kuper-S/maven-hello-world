name: Build and Deploy Pipeline

on:
  push:
    branches:
      - dockerstage

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Increment Patch Version and Commit
        run: |
          chmod +x versionScript.sh
          ./versionScript.sh
          NEW_VERSION=$(./versionScript.sh)
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          git config --global user.name "${{ secrets.GIT_USER }}"
          git config --global user.email "${{ secrets.EMAIL }}"
          git add pom.xml
          git commit -m "Bump version to $NEW_VERSION [skip ci]"
          git push
        working-directory: ./myapp
        if: github.ref == 'refs/heads/master'

      - name: Build and Push Docker Image
        run: |
          docker build -t kupidun/java-app:${{ env.NEW_VERSION }} .
          echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
          docker push kupidun/java-app:${{ env.NEW_VERSION }}
          docker tag kupidun/java-app:${{ env.NEW_VERSION }} kupidun/java-app:latest
          docker push kupidun/java-app:latest
        working-directory: ./myapp

      - name: Run Docker Container for Testing
        run: |
          docker pull kupidun/java-app:latest
          CONTAINER_ID=$(docker run --name test_container -d -p 8080:8080 kupidun/java-app:latest)
          sleep 10 # Give some time for the application to start
          docker logs $CONTAINER_ID
          docker stop $CONTAINER_ID
          docker rm $CONTAINER_ID
