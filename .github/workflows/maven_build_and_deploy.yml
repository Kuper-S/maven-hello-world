name: Build and Deploy Pipeline

on:
  push:
    branches:
      - master

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2


      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
         java-version: 1.8

      - name: Increment Patch Version
        run: |
          # Extract the VErsion from the pom
          CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "Current Version: $CURRENT_VERSION"

          # Split the version number into major, minor, and patch scheme
          IFS='.' read -ra VERSION_PARTS <<< "$CURRENT_VERSION"
          MAJOR=${VERSION_PARTS[0]}
          MINOR=${VERSION_PARTS[1]}
          PATCH=${VERSION_PARTS[2]}

          # Increment the patch number by 1 
          PATCH=$((PATCH+1))
          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "New Version: $NEW_VERSION"
        working-directory: ./myapp


      - name: Compile Java Source Code
        run: mvn -f /home/runner/work/maven-hello-world/maven-hello-world/myapp/pom.xml compile


      - name: Run Tests
        run: mvn -f /home/runner/work/maven-hello-world/maven-hello-world/myapp/pom.xml test -Dtest=com.myapp.AppTest

      - name: Package Artifact
        run: mvn clean package
        working-directory: ./myapp

      - name: Create Artifact
        uses: actions/upload-artifact@v2
        with:
          name: my-artifact
          path: target/*.jar


      - name: Build Docker Image
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "${VERSION}"
          docker build -t java-app/github-pipline:${VERSION} .
        working-directory: ./myapp


      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: List Docker Images
        run: docker images

      - name: Extract Version and Build/Push Docker Image
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "Version extracted: $VERSION"
          echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login --username yourusername --password-stdin
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/github-pipline:$VERSION
        working-directory: ./myapp


