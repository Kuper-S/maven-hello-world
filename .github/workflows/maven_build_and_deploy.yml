name: Build and Deploy Pipeline

on:
  push:
    branches:
      - master

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Docker version
        run: docker --version
      - name: Increment Patch Version
        #run: mvn -f /home/runner/work/maven-hello-world/maven-hello-world/myapp/pom.xml versions:set -DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.nextIncrementalVersion}
        run: mvn -f /home/runner/work/maven-hello-world/maven-hello-world/myapp/pom.xml versions:set -DnewVersion=1.0.1
      - name: Compile Java Source Code
        run: mvn -f /home/runner/work/maven-hello-world/maven-hello-world/myapp/pom.xml compile


      - name: Run Tests
        run: mvn -f /home/runner/work/maven-hello-world/maven-hello-world/myapp/pom.xml test -Dtest=com.myapp.AppTest

      - name: Package Artifact
        run: mvn -f /home/runner/work/maven-hello-world/maven-hello-world/myapp/pom.xml package


      - name: Build Docker Image
        run: |
          cd /home/runner/work/maven-hello-world/maven-hello-world/myapp
          ls
          #VERSION=$(grep -oP '<version>\K[^<]+' pom.xml)
          #docker build  VERSION=1.0.0 -t javaApp:$VERSION .
          docker build --build-arg VERSION=1.0.0 -t java-app:1.0.0 .


      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build and tag Docker image
        run: |
          cd /home/runner/work/maven-hello-world/maven-hello-world/myapp
          docker build --build-arg VERSION=1.0.0 -t java-app:1.0.0 .

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/java-app:1.0.0
